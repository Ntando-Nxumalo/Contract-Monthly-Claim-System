@model IEnumerable<Contract_Monthly_Claim_System.Models.Claim>
<style>
        /* Reset and Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #ffff 0%, #ffff 100%);
            min-height: 100vh;
            color: #333;
            line-height: 1.6;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Dashboard Welcome */
        .dashboard-welcome {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            border-left: 5px solid #f39c12;
        }

            .dashboard-welcome h1 {
                color: #2c3e50;
                margin-bottom: 10px;
                font-size: 2.2rem;
            }

            .dashboard-welcome p {
                color: #7f8c8d;
                font-size: 1.1rem;
            }

            .dashboard-welcome i {
                color: #f39c12;
                margin-right: 15px;
            }

        /* Quick Stats */
        .quick-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border-radius: 12px;
            padding: 25px;
            text-align: center;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border-top: 4px solid;
        }

            .stat-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 35px rgba(0,0,0,0.15);
            }

            .stat-card i {
                font-size: 2.2rem;
                margin-bottom: 15px;
            }

            .stat-card h3 {
                font-size: 2rem;
                margin-bottom: 8px;
                font-weight: 700;
            }

            .stat-card p {
                color: #7f8c8d;
                font-size: 0.95rem;
                font-weight: 600;
            }

            .stat-card.pending {
                border-color: #f39c12;
            }

                .stat-card.pending i {
                    color: #f39c12;
                }

                .stat-card.pending h3 {
                    color: #f39c12;
                }

            .stat-card.approved {
                border-color: #27ae60;
            }

                .stat-card.approved i {
                    color: #27ae60;
                }

                .stat-card.approved h3 {
                    color: #27ae60;
                }

            .stat-card.rejected {
                border-color: #e74c3c;
            }

                .stat-card.rejected i {
                    color: #e74c3c;
                }

                .stat-card.rejected h3 {
                    color: #e74c3c;
                }

            .stat-card:not(.pending):not(.approved):not(.rejected) {
                border-color: #3498db;
            }

                .stat-card:not(.pending):not(.approved):not(.rejected) i {
                    color: #3498db;
                }

                .stat-card:not(.pending):not(.approved):not(.rejected) h3 {
                    color: #3498db;
                }

        /* Pending Claims Section */
        .pending-claims {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .section-header {
            display: flex;
            align-items: center;
            margin-bottom: 25px;
            border-bottom: 2px solid #ecf0f1;
            padding-bottom: 15px;
        }

            .section-header h2 {
                color: #2c3e50;
                font-size: 1.6rem;
            }

            .section-header i {
                color: #f39c12;
                margin-right: 15px;
                font-size: 1.3rem;
            }

        /* Claims Table */
        .claims-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }

            .claims-table th {
                background: linear-gradient(135deg, #2c3e50, #34495e);
                color: white;
                padding: 16px 12px;
                text-align: left;
                font-weight: 600;
                font-size: 0.9rem;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }

            .claims-table td {
                padding: 14px 12px;
                border-bottom: 1px solid #ecf0f1;
                color: #2c3e50;
            }

            .claims-table tr {
                transition: background-color 0.3s ease;
            }

                .claims-table tr:hover {
                    background: #f8f9fa;
                }

                .claims-table tr:last-child td {
                    border-bottom: none;
                }

        /* Status Badges */
        .status-badge {
            padding: 6px 12px;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: inline-block;
            text-align: center;
            min-width: 80px;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }

        .status-approved {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .status-rejected {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .btn {
            padding: 6px 12px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.8rem;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 4px;
            min-width: 70px;
        }

        .btn-sm {
            padding: 6px 12px;
            font-size: 0.8rem;
        }

        .btn-success {
            background: linear-gradient(135deg, #27ae60, #229954);
            color: white;
        }

            .btn-success:hover {
                background: linear-gradient(135deg, #229954, #27ae60);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(39, 174, 96, 0.3);
            }

        .btn-danger {
            background: linear-gradient(135deg, #e74c3c, #c0392b);
            color: white;
        }

            .btn-danger:hover {
                background: linear-gradient(135deg, #c0392b, #e74c3c);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(231, 76, 60, 0.3);
            }

        /* Forms in table */
        .claims-table form {
            display: inline;
            margin: 0;
        }

        /* Claim Cards for Mobile */
        .claim-cards {
            display: none;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .claim-card {
            background: white;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            border-left: 4px solid #f39c12;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .claim-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 25px rgba(0,0,0,0.12);
            }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 12px;
            border-bottom: 1px solid #ecf0f1;
        }

            .card-header h3 {
                color: #2c3e50;
                font-size: 1.1rem;
                margin: 0;
            }

        .card-details {
            margin-bottom: 15px;
        }

        .card-detail {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
            padding: 4px 0;
        }

            .card-detail label {
                font-weight: 600;
                color: #7f8c8d;
                font-size: 0.85rem;
            }

            .card-detail span {
                color: #2c3e50;
                text-align: right;
                font-size: 0.85rem;
            }

        .claim-card .action-buttons {
            justify-content: center;
            margin-top: 10px;
        }

        /* Responsive Design */
        @@media (max-width: 1200px) {
            .container

        {
            padding: 15px;
        }

        .claims-table {
            font-size: 0.85rem;
        }

            .claims-table th,
            .claims-table td {
                padding: 12px 8px;
            }

        }

        @@media (max-width: 768px) {
            .dashboard-welcome h1

        {
            font-size: 1.8rem;
        }

        .quick-stats {
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
        }

        .stat-card {
            padding: 20px;
        }

            .stat-card h3 {
                font-size: 1.6rem;
            }

        .section-header h2 {
            font-size: 1.4rem;
        }

        /* Switch to cards on mobile */
        .claims-table {
            display: none;
        }

        .claim-cards {
            display: grid;
        }

        .action-buttons {
            flex-direction: column;
        }

        .btn {
            min-width: 100%;
            justify-content: center;
            margin: 2px 0;
        }

        }

        @@media (max-width: 480px) {
            .quick-stats

        {
            grid-template-columns: 1fr;
        }

        .claim-cards {
            grid-template-columns: 1fr;
        }

        .dashboard-welcome {
            padding: 20px;
        }

        .pending-claims {
            padding: 20px;
        }

        .stat-card h3 {
            font-size: 1.4rem;
        }

        .card-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 8px;
        }

            .card-header h3 {
                font-size: 1rem;
            }

        }

        /* Animation for status updates */
        @@keyframes statusUpdate {
            0%

        {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }

        100% {
            transform: scale(1);
        }

        }

        .status-updated {
            animation: statusUpdate 0.6s ease;
        }

        /* Loading states */
        .loading {
            opacity: 0.6;
            pointer-events: none;
        }

        /* Empty state */
        .empty-state {
            text-align: center;
            padding: 40px;
            color: #7f8c8d;
        }

            .empty-state i {
                font-size: 3rem;
                margin-bottom: 15px;
                color: #bdc3c7;
            }

            .empty-state h3 {
                color: #95a5a6;
                margin-bottom: 10px;
            }
    </style>
    <div class="container">
        <!-- Dashboard Welcome -->
        <div class="dashboard-welcome">
            <h1><i class="fas fa-tasks"></i> Programme Coordinator Dashboard</h1>
            <p>Welcome, Programme Coordinator! Manage and approve claims from lecturers.</p>
        </div>

        <!-- Quick Stats -->
        <div class="quick-stats">
            <div class="stat-card pending">
                <i class="fas fa-clock"></i>
                <h3>@Model.Count(c => c.Status == "Pending")</h3>
                <p>Pending Claims</p>
            </div>
            <div class="stat-card approved">
                <i class="fas fa-check-circle"></i>
                <h3>@Model.Count(c => c.Status == "Approved")</h3>
                <p>Approved Claims</p>
            </div>
            <div class="stat-card rejected">
                <i class="fas fa-times-circle"></i>
                <h3>@Model.Count(c => c.Status == "Rejected")</h3>
                <p>Rejected Claims</p>
            </div>
            <div class="stat-card">
                <i class="fas fa-file-invoice-dollar"></i>
                <h3>@Model.Count()</h3>
                <p>Total Claims</p>
            </div>
        </div>

        <!-- Pending Claims -->
        <div class="pending-claims">
            <div class="section-header">
                <h2><i class="fas fa-clock"></i> Claims Needing Review</h2>
            </div>

            <!-- Desktop Table View -->
            <table class="claims-table">
                <thead>
                    <tr>
                        <th>Claim ID</th>
                        <th>Lecturer</th>
                        <th>Date Submitted</th>
                        <th>Description</th>
                        <th>Amount</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="claims-table-body">
                    @foreach (var claim in Model)
                    {
                        <tr id="claim-row-@claim.Id">
                            <td>CLM-@claim.Id.ToString().PadLeft(3, '0')</td>
                            <td>@claim.LecturerName</td>
                            <td>@claim.CreatedAt.ToString("MMM dd, yyyy")</td>
                            <td>@claim.Notes</td>
                            <td>@String.Format("R {0:N2}", claim.Total)</td>
                            <td>
                                <span id="claim-status-@claim.Id" class="status-badge @(claim.Status == "Pending" ? "status-pending" :
                                                                                                                                                                                         claim.Status == "Approved" ? "status-approved" :
                                                                                                                                                                                         claim.Status == "Rejected" ? "status-rejected" : "")">
                                @claim.Status
                            </span>
                        </td>
                        <td>
                            <div class="action-buttons">
                                <form asp-controller="Claims" asp-action="Approve" method="post" style="display:inline">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@claim.Id" />
                                    <button type="submit" class="btn btn-success btn-sm">Approve</button>
                                </form>
                                <form asp-controller="Claims" asp-action="Reject" method="post" style="display:inline; margin-left:6px">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@claim.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm">Reject</button>
                                </form>
                            </div>
                        </td>
                    </tr>
                                        }
                </tbody>
            </table>

            <!-- Mobile Card View -->
            <div class="claim-cards">
                @foreach (var claim in Model)
                {
                    <div class="claim-card" id="claim-card-@claim.Id">
                        <div class="card-header">
                            <h3>CLM-@claim.Id.ToString().PadLeft(3, '0')</h3>
                            <span class="status-badge @(claim.Status == "Pending" ? "status-pending" :
                                                                                                                         claim.Status == "Approved" ? "status-approved" :
                                                                                                                         claim.Status == "Rejected" ? "status-rejected" : "")"
                              id="claim-status-card-@claim.Id">@claim.Status</span>
                    </div>
                    <div class="card-details">
                        <div class="card-detail"><label>Lecturer</label><span>@claim.LecturerName</span></div>
                        <div class="card-detail"><label>Date</label><span>@claim.CreatedAt.ToString("MMM dd, yyyy")</span></div>
                        <div class="card-detail"><label>Amount</label><span>@String.Format("R {0:N2}", claim.Total)</span></div>
                        <div class="card-detail"><label>Description</label><span>@claim.Notes</span></div>
                    </div>
                    <div class="action-buttons">
                        <form asp-controller="Claims" asp-action="Approve" method="post" style="display:inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@claim.Id" />
                            <button type="submit" class="btn btn-success btn-sm">Approve</button>
                        </form>
                        <form asp-controller="Claims" asp-action="Reject" method="post" style="display:inline; margin-left:6px">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@claim.Id" />
                            <button type="submit" class="btn btn-danger btn-sm">Reject</button>
                        </form>
                    </div>
                </div>
                                }
            </div>
        </div>
    </div>

<script>
        // Function to update status in DOM
        function updateStatusDom(claimId, status) {
            // Update table row status
            const statusBadge = document.getElementById('claim-status-' + claimId);
            if (statusBadge) {
                statusBadge.textContent = status;
                statusBadge.className = 'status-badge ' +
                    (status === 'Pending' ? 'status-pending' :
                     status === 'Approved' ? 'status-approved' :
                     status === 'Rejected' ? 'status-rejected' : '');
                statusBadge.classList.add('status-updated');
                setTimeout(() => statusBadge.classList.remove('status-updated'), 600);
            }

            // Update card status
            const cardStatusBadge = document.getElementById('claim-status-card-' + claimId);
            if (cardStatusBadge) {
                cardStatusBadge.textContent = status;
                cardStatusBadge.className = 'status-badge ' +
                    (status === 'Pending' ? 'status-pending' :
                     status === 'Approved' ? 'status-approved' :
                     status === 'Rejected' ? 'status-rejected' : '');
                cardStatusBadge.classList.add('status-updated');
                setTimeout(() => cardStatusBadge.classList.remove('status-updated'), 600);
            }

            // Update stats (simplified - in a real app you'd want to refresh these)
            console.log('Status updated for claim ' + claimId + ' to ' + status);
        }

        // SignalR connection for real-time updates
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/claimHub")
            .build();

        connection.on("ReceiveClaimStatusUpdate", function (claimId, status) {
            const rowEl = document.getElementById('claim-row-' + claimId);
            if (rowEl) {
                updateStatusDom(claimId, status);
            } else {
                // New claim not present yet; fetch and prepend row
                fetch(`/Claims/Row/${claimId}`, { credentials: 'include' }) // <- include auth cookie
                    .then(r => r.text())
                    .then(html => {
                        const tmp = document.createElement('tbody');
                        tmp.innerHTML = html.trim();
                        const newRow = tmp.querySelector('tr');
                        const body = document.getElementById('claims-table-body');
                        if (newRow && body) {
                            body.prepend(newRow);
                        }
                    })
                    .catch(err => console.error('Failed to fetch claim row', err));
            }
        });

        connection.start()
            .then(() => console.log("SignalR Connected"))
            .catch(err => console.error("SignalR Connection Error: ", err));

        // Handle form submissions with fetch API for better UX
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('form[method="post"]').forEach(form => {
                form.addEventListener('submit', function(e) {
                    e.preventDefault();

                    const formData = new FormData(this);
                    const action = this.getAttribute('action');
                    const claimId = formData.get('id');

                    // Add loading state
                    const buttons = this.querySelectorAll('button');
                    buttons.forEach(btn => {
                        btn.classList.add('loading');
                        btn.disabled = true;
                    });

                    fetch(action, {
                        method: 'POST',
                        body: formData,
                        credentials: 'include', // <- include auth cookie
                        headers: {
                            'RequestVerificationToken': this.querySelector('input[name="__RequestVerificationToken"]').value,
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => {
                        if (response.ok) {
                            // Update status locally immediately for better UX
                            const newStatus = action.includes('Approve') ? 'Approved' : 'Rejected';
                            updateStatusDom(claimId, newStatus);

                            // Show success message
                            alert(`Claim ${claimId} ${newStatus.toLowerCase()} successfully!`);
                        } else {
                            alert('Error updating claim status');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Error updating claim status');
                    })
                    .finally(() => {
                        // Remove loading state
                        buttons.forEach(btn => {
                            btn.classList.remove('loading');
                            btn.disabled = false;
                        });
                    });
                });
            });
        });
    </script>